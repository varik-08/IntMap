<?php

namespace IntMap\Interfaces;

/**
 * Требуется написать IntMap, который по произвольному int ключу хранит произвольное int значение
 * Важно: все данные (в том числе дополнительные, если их размер зависит от числа элементов) требуется хранить в
 * выделенном заранее блоке в разделяемой памяти
 * для доступа к памяти напрямую необходимо (и достаточно) использовать следующие два метода:
 * \shmop_read и \shmop_write
 */
interface IntMapInterface
{

    /**
     * IntMap constructor.
     * @param resource $shmId Результат вызова \shmop_open
     */
    public function __construct($shmId);

    /**
     * Метод должен работать со сложностью O(1) при отсутствии коллизий, но может деградировать при их появлении.
     * @param int $key Произвольный ключ.
     * @param int $value Произвольное значение.
     * @return int|null Предыдущее значение.
     */
    public function put(int $key, int $value): ?int;


    /**
     * Метод должен работать со сложностью O(1) при отсутствии коллизий, но может деградировать при их появлении.
     * @param int $key Ключ.
     * @return int|null Значение, сохраненное ранее по этому ключу.
     */
    public function get(int $key): ?int;

    /**
     * Метод должен работать со сложностью O(1) при отсутствии коллизий, но может деградировать при их появлении.
     * @param int $key Ключ.
     * @return int|null Удаленный ключ.
     */
    public function del(int $key): ?int;
}